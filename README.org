This repo contains my personal configuration of the [[http://spacemacs.org/][Spacemacs]] distribution of
Emacs.

* Installation

* User configuration
** Top-level user configuration

#+BEGIN_SRC emacs-lisp :noweb tangle :tangle user-config.el
<<Frame-appearance>>

<<Key-bindings>>

<<Miscellaneous>>

<<Individual-packages>>

#+END_SRC

** Frame appearance

#+BEGIN_SRC emacs-lisp :noweb-ref Frame-appearance
;; ---- Frame appearance

#+END_SRC

We let the frame titlebar show the path to the current file and the name of the
buffer. Both the path and the buffer name may seem a bit much for a buffer that
holds a file, but not every buffer does. For those buffers, for example the
scratch buffer or the magit status buffer, the buffer name helps a lot.

#+BEGIN_SRC emacs-lisp :noweb-ref Frame-appearance
;; let the frame titlebar show the path to the current file and the buffer name
(setq frame-title-format "%f - %b (%*)")
#+END_SRC

** Key bindings

#+BEGIN_SRC emacs-lisp :noweb-ref Key-bindings
;; ---- Key bindings

#+END_SRC

The function next-error allows one to sequentially visit the errors listed in a
compilation buffer or the matches in a grep buffer (and more). In Emacs, the key
binding is C-x `. This is cumbersome binding, even more so if you have a
keyboard with dead keys. We rebind it as follows:
#+BEGIN_SRC emacs-lisp :noweb-ref Key-bindings
(global-set-key [f4]       'next-error)
#+END_SRC
Note that in Spacemacs, the keybinding is SPC-e-n.

Spacemacs lets the TAB key indent the current line, and if the line is already
indented, tries to complete the thing at point. This pops up an unwanted menu of
completion options when you want to re-indent an empty line whose indentation is
incorrect. Especially in elm-mode, whose indent on an empty line is almost
incorrect by default, this is very annoying. As I never use TAB to get a
completion menu, I let TAB only indent:
#+BEGIN_SRC emacs-lisp :noweb-ref Key-bindings
(setq tab-always-indent t)
#+END_SRC

** Miscellaneous

#+BEGIN_SRC emacs-lisp :noweb-ref Miscellaneous
;; ---- Miscellaneous

#+END_SRC

#+BEGIN_SRC emacs-lisp :noweb-ref Miscellaneous
;; enable word wrap
(add-hook 'text-mode-hook 'turn-on-auto-fill)

#+END_SRC

For some reason the buffer list is ordered by the length of the buffer name once
the user has entered a pattern. It allows for much more comfortable buffer
switching if we maintain the standard most-recently-used ordering:
#+BEGIN_SRC emacs-lisp :noweb-ref Miscellaneous
(defun sks-buffers-nosort-transformer (_ candidates _)
  candidates)

(advice-add 'helm-buffers-sort-transformer :around 'sks-buffers-nosort-transformer)
#+END_SRC
This solution comes from [[https://github.com/emacs-helm/helm/issues/1492#issuecomment-216520302][this comment]] on GitHub issue [[https://github.com/emacs-helm/helm/issues/1492][emacs-helm/helm #1492]] "Can
I define sorting order when narrowing down buffers list?".

** Individual packages

#+BEGIN_SRC emacs-lisp :noweb-ref Individual-packages
;; ---- Individual-packages

#+END_SRC

*** org-mode

#+BEGIN_SRC emacs-lisp :noweb-ref Individual-packages
;; -------- org-mode

#+END_SRC

We allow the evaluation of Python source code blocks in Org buffers:
#+BEGIN_SRC emacs-lisp :noweb-ref Individual-packages
(with-eval-after-load 'org
  (require 'ob-python)
  (org-babel-do-load-languages
    'org-babel-load-languages
    '((python . t))))

#+END_SRC

*** org-journal

#+BEGIN_SRC emacs-lisp :noweb-ref Individual-packages
;; -------- org-journal

#+END_SRC

#+BEGIN_SRC emacs-lisp :noweb-ref Individual-packages
(setq system-time-locale "en_US.UTF-8")

(with-eval-after-load 'org-journal
  (custom-set-variables '(org-journal-dir "~/repos/bitbucket.org/journal/"))
  (custom-set-variables '(org-journal-file-format "%Y%m%d.org"))
  (setq org-journal-date-format "%F, %A")

  (add-to-list 'org-agenda-files org-journal-dir)

  (setq org-journal-time-format "")

  (defun add-time-as-orgmode-property()
    (progn
      (org-insert-property-drawer)
      (org-entry-put (point) "Time" (format-time-string "%H:%M"))
      (re-search-backward "^*")
      (end-of-line)
      )
    )
  (add-hook 'org-journal-after-entry-create-hook 'add-time-as-orgmode-property)
)

#+END_SRC

We use package [[https://github.com/swinkels/oje][oje]] to export our org-journal to [[https://getnikola.com/][Nikola]], the static site generator:
#+BEGIN_SRC emacs-lisp :noweb-ref Individual-packages
(load "~/repos/github.com/oje/oje.el")

#+END_SRC
